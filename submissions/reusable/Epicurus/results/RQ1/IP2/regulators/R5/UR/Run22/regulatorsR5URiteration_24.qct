set k_max=10;
assume (all_k(k>= 0  and k<= 3  impl  lcv_cmd_fcs_dps_{k} < 0.48083*(k-0) +46.6936 +0.001) and all_k(k>= 3  and k<= 6  impl  lcv_cmd_fcs_dps_{k} >= 0.48083*(k-0) +46.6936 -0.001) and all_k(k>= 3  and k<= 6  impl ( ncv_cmd_fcs_dps{k} < 0.67841 ))) or (all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} < 0.48083*(k-0) +46.6936 ) and all_k(k>= 0  and k<= 3  impl ( lcv_cmd_fcs_dps_{k} >= 47.1733 ))) or (all_k(k>= 0  and k<= 3  impl  lcv_cmd_fcs_dps_{k} < 0.48083*(k-0) +46.6936 +0.001) and all_k(k>= 3  and k<= 6  impl  lcv_cmd_fcs_dps_{k} >= 0.48083*(k-0) +46.6936 -0.001) and all_k(k>= 3  and k<= 6  impl ( ncv_cmd_fcs_dps{k} >= 0.67841 )) and all_k(k>= 3  and k<= 6  impl ( vtas_adc_kts{k} >= 49.9374 ))) or (all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} >= -7.1185*(k-0) +46.6936 ) and all_k(k>= 0  and k<= 3  impl ( lcv_cmd_fcs_dps_{k} < 18.0838 ))) or (all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} < 4.6318*(k-0) +21.7878 ) and all_k(k>= 3  and k<= 6  impl ( zcv_fcs_fps{k} >= 31.9018 ))) or (all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} < 0.48083*(k-0) +46.6936 ) and all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} >= -3.0031*(k-0) +21.7878 ) and all_k(k>= 3  and k<= 6  impl ( ncv_cmd_fcs_dps{k} >= 12.2735 ))) or (all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} >= 1.9269*(k-0) +65.1198 ) and all_k(k>= 0  and k<= 3  impl ( lcv_cmd_fcs_dps_{k} < 66.4212 ))) or (all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} < 1.71*(k-0) +66.4212 ) and all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} >= -4.7683*(k-0) +46.6936 ) and all_k(k>= 0  and k<= 3  impl ( beta_dot{k} < 46.9846 ))) or (all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} >= 0.95763*(k-0) +68.3685 ) and all_k(k>= 3  and k<= 6  impl ( ncv_cmd_fcs_dps{k} < 73.5119 ))) or (all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} < 1.71*(k-0) +66.4212 ) and all_k(k>= 0  and k<= 6  impl  lcv_cmd_fcs_dps_{k} >= -4.7683*(k-0) +46.6936 ) and all_k(k>= 3  and k<= 6  impl ( alt_des_ft{k} < 19.0422 )) and all_k(k>= 0  and k<= 3  impl ( beta_dot{k} < 46.9846 )));
assume lcv_cmd_fcs_dps_>0;
% single control point
% lcv_cmd_fcs_dps_{k}<= lcv_cmd_fcs_dps_{k-1} and lcv_cmd_fcs_dps_{k}>= lcv_cmd_fcs_dps_{k-1};
%assume vtas_adc_kts{k}<= vtas_adc_kts{k-1} and vtas_adc_kts{k}>= vtas_adc_kts{k-1};
abs(lcvdt_cmd_fcs_dps2{k} - lcvdt_cmd_fcs_dps2{k-1}) <= 50;